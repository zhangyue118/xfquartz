<?xml version="1.0" encoding="UTF-8" ?>   
    <!DOCTYPE mapper   
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netintech.xfquartz.dao.qjt.PhotoQueryTaskDao">

     <!-- 实体类与数据库映射字段部分  start -->
	<resultMap id="ResultMapPhotoQueryTask" type="com.netintech.xfquartz.bean.PhotoQueryTask">
        <result property="id" column="ID"  jdbcType="NUMERIC"/>
        <result property="taskname" column="TASKNAME"  jdbcType="VARCHAR"/>
        <result property="excelname" column="EXCELNAME"  jdbcType="VARCHAR"/>
        <result property="tasktime" column="TASKTIME"  jdbcType="TIMESTAMP"/>
        <result property="state" column="STATE"  jdbcType="NUMERIC"/>
        <result property="adduser" column="ADDUSER"  jdbcType="NUMERIC"/>
        <result property="downloadpath" column="DOWNLOADPATH"  jdbcType="VARCHAR"/>
	</resultMap>
	 <!-- 实体类与数据库映射字段部分  end -->
	 
	 <!-- 声明数据库所有字段 -->
	<sql id="PhotoQueryTask_field">
           ID,
           TASKNAME,
           EXCELNAME,
           TASKTIME,
           STATE,
           ADDUSER,
           DOWNLOADPATH
	</sql>
	
	 <!-- 声明数据库字段除id -->
	<sql id="PhotoQueryTask_insertField">
           TASKNAME,
           EXCELNAME,
           TASKTIME,
           STATE,
           ADDUSER,
           DOWNLOADPATH
	</sql>
	
	<!-- 实体类属性  -->
	<sql id="PhotoQueryTask_insert">
        	#{id} ,
        	#{taskname} ,
        	#{excelname} ,
        	#{tasktime} ,
        	#{state} ,
        	#{adduser} ,
        	#{downloadpath} 
	</sql>
	
	<!-- 执行修改时 数据库字段和表字段比较 -->
	<sql id="PhotoQueryTask_update">
		    <if test="taskname != null" >
	            TASKNAME = #{taskname} ,
	        </if>
		    <if test="excelname != null" >
	            EXCELNAME = #{excelname} ,
	        </if>
		    <if test="tasktime != null" >
	            TASKTIME = #{tasktime} ,
	        </if>
		    <if test="state != null" >
	            STATE = #{state} ,
	        </if>
		    <if test="adduser != null" >
	            ADDUSER = #{adduser} ,
	        </if>
		    <if test="downloadpath != null" >
	            DOWNLOADPATH = #{downloadpath} 
	        </if>
	</sql>
	
	<!-- 查询时条件 -->
	<sql id="PhotoQueryTask_where">
	        <if test="id != null " >
	            and ID =#{id}
	        </if>
	        <if test="taskname != null " >
	            and TASKNAME =#{taskname}
	        </if>
	        <if test="excelname != null " >
	            and EXCELNAME =#{excelname}
	        </if>
	        <if test="tasktime != null " >
	            and TASKTIME =#{tasktime}
	        </if>
	        <if test="state != null " >
	            and STATE =#{state}
	        </if>
	        <if test="adduser != null " >
	            and ADDUSER =#{adduser}
	        </if>
	        <if test="downloadpath != null " >
	            and DOWNLOADPATH =#{downloadpath}
	        </if>
	</sql>
	
   <!-- **************************************分割线************************************************************ -->	
	
	<!-- 以下是sql执行语句 
	     注意：1)需要传参数的请注意你使用的方法是 xxByMap还是ByEntuty 存放的参数类型不一致。
	      2)非自定义的方法已经是basedao注明的。方法名一定要和id相同
	      3)自定义类的方法注意是否和共有方法重名id
	      4)执行sql出现顺序和baseDao方法一致，便于查询请勿随意添加，自定义的sql一律放在自定义sql区域
	 -->
	
	
   <!-- ========================================新增==================================================================== -->
	<!-- 
	 【注意添加序列】
	 1.方法描述：新增数据
	 2.参数：实体类
	 3.返回：主键
	-->
	<insert id="insert" parameterType="com.netintech.xfquartz.bean.PhotoQueryTask" useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">  
        	SELECT SEQ_PHOTOTASK.Nextval as ID from DUAL  
         </selectKey>
        INSERT INTO PHOTO_QUERY_TASK (
        <include refid="PhotoQueryTask_field" />
        ) VALUES (
        <include refid="PhotoQueryTask_insert" />       
        )
	</insert>
	
	
	 <!-- ========================================删除==================================================================== -->
	<!-- 
	 1.方法描述：根据主键id删除
	 2.参数：主键id
	-->
	<delete id="deleteById" parameterType="java.lang.Integer">
	 delete from PHOTO_QUERY_TASK where id=#{id}
	</delete>
	
	
	<!-- 
	 1.方法描述：根据实体类删除
	 2.参数：主键id
	-->
	<delete id="deleteByEntity" parameterType="com.netintech.xfquartz.bean.PhotoQueryTask">
	 delete from PHOTO_QUERY_TASK
	  WHERE 1=1
      <include refid="PhotoQueryTask_where" />   
	</delete>
	
	
	<!-- 
	 1.方法描述：根据map删除
	 2.参数：主键id
	-->
	<delete id="deleteByMap" parameterType="java.util.HashMap">
	 delete from PHOTO_QUERY_TASK
	  WHERE 1=1
      <include refid="PhotoQueryTask_where" />   
	</delete>
	
	
	 <!-- ========================================修改==================================================================== -->
	<!-- 
	 1.方法描述：修改数据通过id
	 2.参数：实体类
	 -->
	<update id="updateById" parameterType="com.netintech.xfquartz.bean.PhotoQueryTask">
        UPDATE PHOTO_QUERY_TASK
        <set>
	        <include refid="PhotoQueryTask_update" />
	    </set>
        WHERE 1=1
        	and id=#{id}      
	</update>
	
	
	 <!-- ========================================查询列表【不分页】==================================================================== -->
	
	<!-- 
	 1.方法描述：用于listByMap根据map查询
	 2.参数：map
	-->
	<select id="listByMap" resultMap="ResultMapPhotoQueryTask" parameterType="map">
		select <include refid="PhotoQueryTask_field" />
 		from PHOTO_QUERY_TASK where 1=1
 		<include refid="PhotoQueryTask_where" /> 
	</select>
	
	
	<!-- 
	 1.方法描述：查询所有实体,根据实体属性值为判断条件查询所有实体，
	 2.参数：Entity
	-->
	<select id="listByEntity" resultMap="ResultMapPhotoQueryTask" parameterType="com.netintech.xfquartz.bean.PhotoQueryTask">
		select <include refid="PhotoQueryTask_field" />
 		from PHOTO_QUERY_TASK where 1=1
 		<include refid="PhotoQueryTask_where" /> 
	</select>
	
	
	
	 <!-- ========================================查询单个对象==================================================================== -->
	<!-- 
	 1.方法描述：select查询单个
	 2.参数：id
	-->
	<select id="getById" resultMap="ResultMapPhotoQueryTask" parameterType="java.lang.Integer">
		select 	<include refid="PhotoQueryTask_field" />
 		from PHOTO_QUERY_TASK 
 		where id=#{id}
	</select>
	
	<!-- 
	 1.方法描述：用于getByMap根据map查询
	 2.参数：map
	-->
	<select id="getByMap" resultMap="ResultMapPhotoQueryTask" parameterType="map">
		select <include refid="PhotoQueryTask_field" />
 		from PHOTO_QUERY_TASK where 1=1
 		<include refid="PhotoQueryTask_where" /> 
	</select>
	
	<!-- 
	 1.方法描述：用于Entity根据Entity查询
	 2.参数：Entity
	 -->
	<select id="getByEntity" resultMap="ResultMapPhotoQueryTask" parameterType="com.netintech.xfquartz.bean.PhotoQueryTask">
		select <include refid="PhotoQueryTask_field" />
 		from PHOTO_QUERY_TASK where 1=1
 		<include refid="PhotoQueryTask_where" /> 
	</select>
	
	
	 <!-- ========================================批量新增修改==================================================================== -->
	<!-- 
	 1.方法描述：批量插入
	 2.参数：集合/数组
	-->
	<insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO PHOTO_QUERY_TASK (
        <include refid="PhotoQueryTask_insertField" />
        ) VALUES 
        <foreach collection="list" item="item" index="index"
			separator=",">
			(
			
	            #{item.taskname} ,
	            #{item.excelname} ,
	            #{item.tasktime} ,
	            #{item.state} ,
	            #{item.adduser} ,
	            #{item.downloadpath} 
			
			)
		</foreach>       
        
	</insert>
    
    <!-- 
	 1.方法描述：批量修改
	 2.参数：集合/数组
	-->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index"
			separator=";">
        UPDATE 
        PHOTO_QUERY_TASK 
        <set>
		    <if test="item.taskname != null" >
	        TASKNAME = #{item.taskname},
	        </if>
		    <if test="item.excelname != null" >
	        EXCELNAME = #{item.excelname},
	        </if>
		    <if test="item.tasktime != null" >
	        TASKTIME = #{item.tasktime},
	        </if>
		    <if test="item.state != null" >
	        STATE = #{item.state},
	        </if>
		    <if test="item.adduser != null" >
	        ADDUSER = #{item.adduser},
	        </if>
		    <if test="item.downloadpath != null" >
	        DOWNLOADPATH = #{item.downloadpath}
	        </if>
	    </set>
        WHERE  
        	 id=#{id}
        </foreach>    
	</update>
	
	
	 <!--查询总数  -->
	<select id="getPhotoQueryTaskCount"  parameterType="map" resultType="int">
	     SELECT count(1) FROM PHOTO_QUERY_TASK 
	     where 1=1 
          <if test="taskname!=null and taskname!=''">
          and TASKNAME like '%${taskname}%'
	      </if>
	      <if test="startTime != null and startTime != ''">
			AND TASKTIME  &gt;= to_date('${startTime}','yyyy-MM-dd hh24:mi:ss')
		</if>
		<if test="endTime != null and endTime != ''">
			AND TASKTIME  &lt;= to_date('${endTime}','yyyy-MM-dd hh24:mi:ss')+1
		</if>
		ORDER BY TASKTIME DESC
	</select>
	
	 <!--查询列表  -->
	<select id="getPhotoQueryTaskList"  parameterType="map"  resultType="com.netintech.xfquartz.bean.PhotoQueryTask">
	   SELECT * FROM(
    SELECT A.*, ROWNUM RN FROM(
    SELECT <include refid="PhotoQueryTask_field" /> FROM PHOTO_QUERY_TASK
    WHERE 1=1 
        <if test="taskname!=null and taskname!=''">
          and TASKNAME like '%${taskname}%'
	      </if>
	      <if test="startTime != null and startTime != ''">
			AND TASKTIME  &gt;= to_date('${startTime}','yyyy-MM-dd hh24:mi:ss')
		</if>
		<if test="endTime != null and endTime != ''">
			AND TASKTIME  &lt;= to_date('${endTime}','yyyy-MM-dd hh24:mi:ss')+1
		</if>
    ORDER BY TASKTIME DESC) A
      )
     WHERE  RN &gt;#{start} and RN &lt;=#{end}
	</select>   
	
	<!-- 批量删除 -->
	<delete id="exDelete" parameterType="String">
	  delete from PHOTO_QUERY_TASK
	   where id in (1)
	</delete>
	
	
	

</mapper>

